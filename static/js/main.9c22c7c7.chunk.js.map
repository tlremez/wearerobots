{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"wNAceA,MAZf,YAAgC,IAAjBC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,MAAMC,EAAI,EAAJA,GAC1B,OACC,sBAAKC,UAAU,mDAAf,UACA,qBAAKC,IAAG,+BAA0BF,EAA1B,cACP,gCACC,6BAAKF,IACL,4BAAIC,WCcOI,MAnBf,YAA4B,IAATC,EAAQ,EAARA,OAClB,OACC,8BAEKA,EAAOC,KAAI,SAACC,EAAMC,GACpB,OACC,cAAC,EAAD,CAECP,GAAII,EAAOG,GAAGP,GACdF,KAAMM,EAAOG,GAAGT,KAChBC,MAAOK,EAAOG,GAAGR,OAHZQ,SCKGC,MAbf,YAA+C,EAA3BC,YAA4B,IAAfC,EAAc,EAAdA,aAChC,OACC,qBAAKT,UAAU,MAAf,SACA,uBACAA,UAAU,mCACVU,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCAGI,EAPD,SAACC,GACd,OACC,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACEJ,EAAMK,YCgBKC,E,kDAlBd,WAAYN,GAAO,IAAD,8BACjB,cAAMA,IACDO,MAAM,CACVC,UAAU,GAHM,E,8DAOAC,EAAOC,GACxBC,KAAKC,SAAS,CAACJ,UAAS,M,+BAIxB,OAAGG,KAAKJ,MAAMC,SACN,0DAEDG,KAAKX,MAAMK,a,GAhBOQ,aCmDZC,G,wDA1Cd,aAAc,IAAD,8BACZ,gBAaDC,eAAiB,SAACC,GACjB,EAAKJ,SAAS,CAAClB,YAAasB,EAAMC,OAAOC,SAbzC,EAAKX,MAAM,CACVlB,OAAQ,GACRK,YAAY,IAJD,E,gEAQO,IAAD,OAClByB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAQ,EAAKX,SAAS,CAACvB,OAAQkC,S,+BAQ7B,IAAD,EACuBZ,KAAKJ,MAA5BlB,EADA,EACAA,OAAQK,EADR,EACQA,YACT8B,EAAiBnC,EAAOoC,QAAO,SAAAC,GACrC,OAAOA,EAAM3C,KAAK4C,cAAcC,SAASlC,EAAYiC,kBAErD,OAAQtC,EAAOwC,OAGb,sBAAK3C,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,2BACA,cAAC,EAAD,CAAWS,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,UACA,cAAC,EAAD,CAAU1B,OAAQmC,WAPpB,gD,GA1BeX,cCEHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACR,cAAC,EAAD,IACCC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.9c22c7c7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Card({name, email,id}){\r\n\treturn(\r\n\t\t<div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-S'>\r\n\t\t<img src={`https://robohash.org/${id}?200x200`}/>\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nfunction CardList({robots}){\r\n\treturn(\r\n\t\t<div>\r\n\t\t    {\r\n\t\t    \trobots.map((user, i) =>{\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Card \r\n\t\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\t\tid={robots[i].id} \r\n\t\t\t\t\t\t\tname={robots[i].name} \r\n\t\t\t\t\t\t\temail={robots[i].email}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t    }\r\n\t    </div>\r\n\t\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nfunction SearchBox({searchfield, searchChange}){\r\n\treturn(\r\n\t\t<div className='pa2'>\r\n\t\t<input \r\n\t\tclassName='pa3 ba b--green bg-lightest-blue' \r\n\t\ttype='search' \r\n\t\tplaceholder='Search Robots'\r\n\t\tonChange={searchChange}\r\n\t\t/>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll =(props)=>{\r\n\treturn (\r\n\t\t<div style={{overflowY: 'scroll', border: '1px solid black', height: '800px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t\t)\r\n}\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state={\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidCatch(error, info){\r\n\t\tthis.setState({hasError:true})\r\n\t}\r\n\r\n\trender(){\r\n\t\tif(this.state.hasError){\r\n\t\t\treturn <h1>Oooops. That is not good</h1>\r\n\t\t}\r\n\t\treturn this.props.children\r\n\t}\r\n}\r\nexport default ErrorBoundry;","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport {robots} from '../robots';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css';\r\n\r\n\r\n\r\nclass App extends Component{\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state={\r\n\t\t\trobots: [],\r\n\t\t\tsearchfield:''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response=> response.json())\r\n\t\t.then(users=>{this.setState({robots: users})});\r\n\t}\r\n\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState({searchfield: event.target.value})\r\n\t\t\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst {robots, searchfield} = this.state;\r\n\t\tconst filteredRobots = robots.filter(robot =>{\r\n\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\t\t});\r\n\t\treturn !robots.length ?\r\n\t\t\t<h1>Loading...</h1> :\r\n\t\t\r\n\t\t\t(<div className='tc'>\r\n\t\t\t\t\t<h1 className=\"f1\">We are Robots</h1>\r\n\t\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\r\n\t\t\t\t\t<Scroll>\r\n\t\t\t\t\t<ErrorBoundry>\r\n\t\t\t\t\t<CardList robots={filteredRobots}/>\r\n\t\t\t\t\t</ErrorBoundry>\r\n\t\t\t\t\t</Scroll>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t\r\n\t\r\n\t}\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n\t<App/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}